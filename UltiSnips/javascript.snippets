snippet imp "import" b
import `!p
def formatVariableName(path):
    lastPart = path.split('/')[-1]
    if lastPart == 'underscore':
        return '_'
    elif lastPart == 'jquery':
        return '$'
    else:
        return re.sub(r'[_\-]', '', lastPart.title())
snip.rv = formatVariableName(t[1])
` from '${1}'$0
endsnippet

snippet cl "console.log" b
	console.log(${0})
endsnippet

snippet cll "console.log with label" b
	console.log('${0:FEI}', ${1})
endsnippet

snippet stringify "log json" b
	console.log(JSON.stringify(${0}, null, 4))
endsnippet

snippet ed "export default" b 
export default ${0}
endsnippet

snippet con "const" b
	const ${2} = ${1}
endsnippet

snippet fun "arrow function" i
(${0}) => {
	${1}
}
endsnippet

snippet func "function decleration" i
function ${1}(${2}) {
	${3}
}
endsnippet

snippet reduce "description" i
${1}.reduce((carry, current) => {
	${3}
},${2:})
endsnippet
	
# CLASS section begin

snippet clsfn "shorthand class method"
	${1} = (${2}) => {
		${3}
	}
endsnippet

snippet clsmethod "class method"
	${1}(${2}) {
		${3}
	}
endsnippet

snippet cls "normal class" b
class ${1} {
	constructor() {
		${2}
	}
}

export default $1

endsnippet


# CLASS section end
snippet impr "import react" i
import * as React from 'react'
endsnippet
