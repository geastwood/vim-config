snippet expt "expect(foo).to...(bar)"
expect(${2}).to${1}(${3});
endsnippet

snippet cll "console.log(...)"
console.log('${2:$1: }', ${1});
endsnippet

snippet cl "console.log(...)"
console.log(${1});
endsnippet

snippet me "module.exports"
module.exports = ${1}
endsnippet

snippet req "node require"
const ${1} = require('${2}')
endsnippet

snippet ec "export const"
export const ${1} = ${2}
endsnippet

snippet jest_des "jest describe"
describe('${1}', () => {
  it('${2}', () => {
    expect(true).toBe(true)
  })
})
endsnippet

snippet t_reducer "reducer template"
/* @flow */

import * as storeActions from '${1}'

const defaultState = {}

export type State = {}

export default (state: State = defaultState, action: Action) => {
  switch (action.type) {
    case '${2}':
      return state
    default:
      return state
  }
}
endsnippet

snippet while_t "while(true)"
while (true) {
  ${1}
}
endsnippet
  
